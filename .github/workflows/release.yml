name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.2.2)'
        required: true
        type: string

jobs:
  test-before-release:
    name: Pre-Release Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run all tests
      run: npm test
      
    - name: Verify test count
      run: |
        TEST_COUNT=$(npm test -- --silent | grep -o '[0-9]\+ passed' | head -1 | grep -o '[0-9]\+')
        if [ "$TEST_COUNT" -ne "120" ]; then
          echo "❌ Expected 120 tests, but $TEST_COUNT passed"
          exit 1
        fi
        echo "✅ All 120 tests passed"
        
    - name: Build for production
      run: npm run build
      
    - name: Check bundle size
      run: |
        BUNDLE_SIZE=$(du -sk dist/ | cut -f1)
        echo "📦 Bundle size: ${BUNDLE_SIZE}KB"

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test-before-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build production bundle
      run: npm run build
      
    - name: Create distribution archive
      run: |
        tar -czf social-media-kit-${{ github.ref_name }}.tar.gz dist/
        zip -r social-media-kit-${{ github.ref_name }}.zip dist/
        
    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract version changelog (between current version and previous)
          VERSION=$(echo ${{ github.ref_name }} | sed 's/v//')
          awk "/^## v${VERSION}/,/^## v/{if(/^## v/ && !/^## v${VERSION}/) exit; print}" CHANGELOG.md > release_notes.md
          echo "changelog_file=release_notes.md" >> $GITHUB_OUTPUT
        else
          echo "No CHANGELOG.md found, using basic release notes"
          echo "Release ${{ github.ref_name }}" > release_notes.md
          echo "changelog_file=release_notes.md" >> $GITHUB_OUTPUT
        fi
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Social Media Kit ${{ github.ref_name }}
        body_path: ${{ steps.changelog.outputs.changelog_file }}
        draft: false
        prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
        
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./social-media-kit-${{ github.ref_name }}.tar.gz
        asset_name: social-media-kit-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload ZIP archive
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./social-media-kit-${{ github.ref_name }}.zip
        asset_name: social-media-kit-${{ github.ref_name }}.zip
        asset_content_type: application/zip

  deploy-demo:
    name: Deploy Demo (Optional)
    runs-on: ubuntu-latest
    needs: create-release
    if: github.repository == 'owner/social-media-kit' # Update with actual repo
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for demo
      run: npm run build
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        cname: your-domain.com  # Optional: Update with your domain
        
  notify-success:
    name: Notify Release Success
    runs-on: ubuntu-latest
    needs: [create-release, deploy-demo]
    if: always() && needs.create-release.result == 'success'
    
    steps:
    - name: Success notification
      run: |
        echo "🎉 Release ${{ github.ref_name }} completed successfully!"
        echo "📦 Artifacts: social-media-kit-${{ github.ref_name }}.tar.gz, .zip"
        echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}" 